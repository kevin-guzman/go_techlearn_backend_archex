definitions:
  command.CommandCreatePublication:
    properties:
      Content:
        minLength: 90
        type: string
      Description:
        minLength: 20
        type: string
      Title:
        minLength: 5
        type: string
      Type:
        type: string
      WiterUserId:
        type: integer
    required:
    - Content
    - Description
    - Title
    - Type
    type: object
  command.CommandLoginUser:
    properties:
      Email:
        type: string
      Password:
        minLength: 6
        type: string
    type: object
  command.CommandRegisterCompany:
    properties:
      Email:
        minLength: 5
        type: string
      Name:
        minLength: 5
        type: string
      Owner:
        minLength: 5
        type: string
      Phone:
        minLength: 7
        type: string
    required:
    - Email
    - Name
    - Owner
    - Phone
    type: object
  command.CommandRegisterUser:
    properties:
      CompanyId:
        type: integer
      Email:
        minLength: 5
        type: string
      Name:
        minLength: 5
        type: string
      Password:
        minLength: 6
        type: string
      Role:
        type: string
    required:
    - CompanyId
    - Email
    - Name
    - Password
    - Role
    type: object
  response.ResponseModel:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
info:
  contact: {}
paths:
  /company:
    get:
      consumes:
      - application/json
      description: Get all companies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Get companies
      tags:
      - company
    post:
      consumes:
      - application/json
      description: Enpoint to create a company
      parameters:
      - description: create company
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/command.CommandRegisterCompany'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Create company
      tags:
      - company
  /publication:
    get:
      consumes:
      - application/json
      description: Get all publications
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Get publications
      tags:
      - publication
    post:
      consumes:
      - application/json
      description: Enpoint to create a publication
      parameters:
      - description: create publication
        in: body
        name: publication
        required: true
        schema:
          $ref: '#/definitions/command.CommandCreatePublication'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Create publication
      tags:
      - publication
  /user:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Get users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Enpoint to create a user
      parameters:
      - description: create user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/command.CommandRegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Create user
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Enpoint to login a user
      parameters:
      - description: login user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/command.CommandLoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseModel'
      summary: Login of user
      tags:
      - user
swagger: "2.0"
